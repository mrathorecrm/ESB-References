package routines;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class validateJavaDate {

	public static Date validateJavaDate(String strDate, String format)
	{
	    /* Check if date is 'null' */
	    if (strDate.trim().equals(""))
	    {
	        return null;
	    }
	    /* Date is not 'null' */
	    else
	    {
            //System.out.println("Input Date1: " + strDate);
	        /*
	         * Set preferred date format
	         */
	        String dateFormat = (!format.trim().isEmpty() ? format : "yyyy-MM-dd HH:mm:ss");
	        SimpleDateFormat sdfrmt = new SimpleDateFormat(dateFormat);
	        sdfrmt.setLenient(false);

	        /* Create Date object
	         * parse the string into date 
	         */
	        try
	        {
	            //System.out.println("Input Date2: " + strDate);
	            
	        	/* Return date format if valid */
	            strDate = strDate.replace("T", " ");
	            Date javaDate = sdfrmt.parse(strDate);
	            //System.out.println("Output Date: " + javaDate);

	            // Return null if year is not valid
	            int year = Integer.parseInt(new SimpleDateFormat("yyyy").format(javaDate));  // 2012
	            if (year == 0001) {
	            	return null;
	            }
	            
	            return javaDate;
	        }
	        /* Date format is invalid */
	        catch (ParseException e)
	        {
	            System.out.println("Input Date Error: " + strDate);
	            return null;
	        }
	    }
	}
}